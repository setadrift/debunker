"""add_enhanced_bias_system

Revision ID: bee9bd2e3bcf
Revises: 5ef145391709
Create Date: 2025-06-23 15:22:01.938876

"""
from __future__ import annotations

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "bee9bd2e3bcf"
down_revision = "5ef145391709"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "academic_sources",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("authors", sa.Text(), nullable=True),
        sa.Column("publication_year", sa.Integer(), nullable=True),
        sa.Column("doi", sa.Text(), nullable=True),
        sa.Column("abstract", sa.Text(), nullable=True),
        sa.Column("full_text", sa.Text(), nullable=True),
        sa.Column("source_type", sa.Text(), nullable=False),
        sa.Column(
            "credibility_score",
            sa.Float(),
            nullable=True,
            comment="Score from 0.0 to 1.0 indicating source credibility",
        ),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.Column("url", sa.Text(), nullable=True),
        sa.Column("citation_count", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_academic_sources_credibility_score"),
        "academic_sources",
        ["credibility_score"],
        unique=False,
    )
    op.create_index(
        op.f("ix_academic_sources_doi"), "academic_sources", ["doi"], unique=True
    )
    op.create_index(
        op.f("ix_academic_sources_publication_year"),
        "academic_sources",
        ["publication_year"],
        unique=False,
    )
    op.create_index(
        op.f("ix_academic_sources_source_type"),
        "academic_sources",
        ["source_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_academic_sources_title"), "academic_sources", ["title"], unique=False
    )
    op.create_table(
        "alternative_perspectives",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("source_id", sa.Integer(), nullable=True),
        sa.Column("narrative_id", sa.Integer(), nullable=True),
        sa.Column("perspective_type", sa.Text(), nullable=False),
        sa.Column("perspective_text", sa.Text(), nullable=False),
        sa.Column("supporting_sources", sa.JSON(), nullable=True),
        sa.Column("credibility_indicators", sa.JSON(), nullable=True),
        sa.Column("bias_correction", sa.Text(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=False),
        sa.Column("generation_model", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["narrative_id"], ["narratives.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["source_id"], ["sources.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_alternative_perspectives_confidence_score"),
        "alternative_perspectives",
        ["confidence_score"],
        unique=False,
    )
    op.create_index(
        op.f("ix_alternative_perspectives_narrative_id"),
        "alternative_perspectives",
        ["narrative_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_alternative_perspectives_perspective_type"),
        "alternative_perspectives",
        ["perspective_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_alternative_perspectives_source_id"),
        "alternative_perspectives",
        ["source_id"],
        unique=False,
    )
    op.create_table(
        "bias_analyses",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("source_id", sa.Integer(), nullable=True),
        sa.Column("narrative_id", sa.Integer(), nullable=True),
        sa.Column("analysis_type", sa.Text(), nullable=False),
        sa.Column("bias_indicators", sa.JSON(), nullable=True),
        sa.Column("blind_spots", sa.JSON(), nullable=True),
        sa.Column("missing_context", sa.JSON(), nullable=True),
        sa.Column("alternative_viewpoints", sa.JSON(), nullable=True),
        sa.Column("fact_check_results", sa.JSON(), nullable=True),
        sa.Column("llm_analysis", sa.Text(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=False),
        sa.Column("analysis_model", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["narrative_id"], ["narratives.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["source_id"], ["sources.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_bias_analyses_analysis_type"),
        "bias_analyses",
        ["analysis_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bias_analyses_confidence_score"),
        "bias_analyses",
        ["confidence_score"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bias_analyses_narrative_id"),
        "bias_analyses",
        ["narrative_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bias_analyses_source_id"), "bias_analyses", ["source_id"], unique=False
    )
    op.create_table(
        "fact_checks",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("source_id", sa.Integer(), nullable=False),
        sa.Column("academic_source_id", sa.UUID(), nullable=False),
        sa.Column("claim_text", sa.Text(), nullable=False),
        sa.Column("verification_status", sa.Text(), nullable=False),
        sa.Column("evidence_text", sa.Text(), nullable=True),
        sa.Column(
            "accuracy_score",
            sa.Float(),
            nullable=False,
            comment="Accuracy score from 0.0 to 1.0",
        ),
        sa.Column("context_provided", sa.Boolean(), nullable=False),
        sa.Column("llm_analysis", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["academic_source_id"],
            ["academic_sources.id"],
        ),
        sa.ForeignKeyConstraint(["source_id"], ["sources.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_fact_checks_academic_source_id"),
        "fact_checks",
        ["academic_source_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_fact_checks_accuracy_score"),
        "fact_checks",
        ["accuracy_score"],
        unique=False,
    )
    op.create_index(
        op.f("ix_fact_checks_source_id"), "fact_checks", ["source_id"], unique=False
    )
    op.create_index(
        op.f("ix_fact_checks_verification_status"),
        "fact_checks",
        ["verification_status"],
        unique=False,
    )
    op.add_column(
        "source_bias",
        sa.Column(
            "political_bias",
            sa.Float(),
            nullable=True,
            comment="Political bias from -1.0 (left) to 1.0 (right)",
        ),
    )
    op.add_column(
        "source_bias",
        sa.Column(
            "factual_accuracy",
            sa.Float(),
            nullable=True,
            comment="Factual accuracy from 0.0 (low) to 1.0 (high)",
        ),
    )
    op.add_column(
        "source_bias",
        sa.Column(
            "emotional_tone",
            sa.Float(),
            nullable=True,
            comment="Emotional tone from -1.0 (negative) to 1.0 (positive)",
        ),
    )
    op.add_column(
        "source_bias",
        sa.Column(
            "sensationalism_score",
            sa.Float(),
            nullable=True,
            comment="Sensationalism from 0.0 (neutral) to 1.0 (highly sensationalized)",
        ),
    )
    op.add_column("source_bias", sa.Column("analysis_method", sa.Text(), nullable=True))
    op.add_column(
        "source_bias",
        sa.Column(
            "confidence_score",
            sa.Float(),
            nullable=True,
            comment="Confidence in bias assessment from 0.0 to 1.0",
        ),
    )
    op.add_column(
        "source_bias",
        sa.Column("last_analysis_date", sa.DateTime(timezone=True), nullable=True),
    )
    op.alter_column(
        "source_bias",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "source_bias",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.create_index(
        op.f("ix_source_bias_analysis_method"),
        "source_bias",
        ["analysis_method"],
        unique=False,
    )
    op.create_index(
        op.f("ix_source_bias_confidence_score"),
        "source_bias",
        ["confidence_score"],
        unique=False,
    )
    op.create_index(
        op.f("ix_source_bias_emotional_tone"),
        "source_bias",
        ["emotional_tone"],
        unique=False,
    )
    op.create_index(
        op.f("ix_source_bias_factual_accuracy"),
        "source_bias",
        ["factual_accuracy"],
        unique=False,
    )
    op.create_index(
        op.f("ix_source_bias_political_bias"),
        "source_bias",
        ["political_bias"],
        unique=False,
    )
    op.create_index(
        op.f("ix_source_bias_sensationalism_score"),
        "source_bias",
        ["sensationalism_score"],
        unique=False,
    )
    op.add_column("sources", sa.Column("bias_id", sa.UUID(), nullable=True))
    op.drop_constraint("fk_sources_source_bias_id", "sources", type_="foreignkey")
    op.create_foreign_key(None, "sources", "source_bias", ["bias_id"], ["id"])
    op.drop_column("sources", "source_bias_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "sources",
        sa.Column("source_bias_id", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "sources", type_="foreignkey")
    op.create_foreign_key(
        "fk_sources_source_bias_id",
        "sources",
        "source_bias",
        ["source_bias_id"],
        ["id"],
    )
    op.drop_column("sources", "bias_id")
    op.drop_index(op.f("ix_source_bias_sensationalism_score"), table_name="source_bias")
    op.drop_index(op.f("ix_source_bias_political_bias"), table_name="source_bias")
    op.drop_index(op.f("ix_source_bias_factual_accuracy"), table_name="source_bias")
    op.drop_index(op.f("ix_source_bias_emotional_tone"), table_name="source_bias")
    op.drop_index(op.f("ix_source_bias_confidence_score"), table_name="source_bias")
    op.drop_index(op.f("ix_source_bias_analysis_method"), table_name="source_bias")
    op.alter_column(
        "source_bias",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "source_bias",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_column("source_bias", "last_analysis_date")
    op.drop_column("source_bias", "confidence_score")
    op.drop_column("source_bias", "analysis_method")
    op.drop_column("source_bias", "sensationalism_score")
    op.drop_column("source_bias", "emotional_tone")
    op.drop_column("source_bias", "factual_accuracy")
    op.drop_column("source_bias", "political_bias")
    op.drop_index(op.f("ix_fact_checks_verification_status"), table_name="fact_checks")
    op.drop_index(op.f("ix_fact_checks_source_id"), table_name="fact_checks")
    op.drop_index(op.f("ix_fact_checks_accuracy_score"), table_name="fact_checks")
    op.drop_index(op.f("ix_fact_checks_academic_source_id"), table_name="fact_checks")
    op.drop_table("fact_checks")
    op.drop_index(op.f("ix_bias_analyses_source_id"), table_name="bias_analyses")
    op.drop_index(op.f("ix_bias_analyses_narrative_id"), table_name="bias_analyses")
    op.drop_index(op.f("ix_bias_analyses_confidence_score"), table_name="bias_analyses")
    op.drop_index(op.f("ix_bias_analyses_analysis_type"), table_name="bias_analyses")
    op.drop_table("bias_analyses")
    op.drop_index(
        op.f("ix_alternative_perspectives_source_id"),
        table_name="alternative_perspectives",
    )
    op.drop_index(
        op.f("ix_alternative_perspectives_perspective_type"),
        table_name="alternative_perspectives",
    )
    op.drop_index(
        op.f("ix_alternative_perspectives_narrative_id"),
        table_name="alternative_perspectives",
    )
    op.drop_index(
        op.f("ix_alternative_perspectives_confidence_score"),
        table_name="alternative_perspectives",
    )
    op.drop_table("alternative_perspectives")
    op.drop_index(op.f("ix_academic_sources_title"), table_name="academic_sources")
    op.drop_index(
        op.f("ix_academic_sources_source_type"), table_name="academic_sources"
    )
    op.drop_index(
        op.f("ix_academic_sources_publication_year"), table_name="academic_sources"
    )
    op.drop_index(op.f("ix_academic_sources_doi"), table_name="academic_sources")
    op.drop_index(
        op.f("ix_academic_sources_credibility_score"), table_name="academic_sources"
    )
    op.drop_table("academic_sources")
    # ### end Alembic commands ###
